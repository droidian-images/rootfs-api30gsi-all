name: droidian rootfs-builder

on:
  push:
    tags:
      - '**'
  schedule:
    - cron: "59 23 * * *"

jobs:
  once:
    runs-on: ubuntu-20.04
    name: Create GitHub release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}${{ steps.create_nightly.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/droidian')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - uses: dev-drprasad/delete-tag-and-release@v0.1.3
        if: startsWith(github.ref, 'refs/tags/droidian') != true
        with:
          delete_release: true # default: false
          tag_name: nightly # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag snapshot
        if: startsWith(github.ref, 'refs/tags/droidian') != true
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly

      - name: Create Release
        id: create_nightly
        if: startsWith(github.ref, 'refs/tags/droidian') != true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          release_name: nightly
          draft: false
          prerelease: true

  build:
    runs-on: ubuntu-20.04
    needs: once

    strategy:
      fail-fast: true
      matrix:
        arch: [amd64]
        template: [rootfs-builder]
        dist: [bookworm]
        namespace: [droidian]
        debos_arch: [amd64,armhf,arm64]

    name: ${{ matrix.template }}:${{ matrix.dist }} on ${{ matrix.debos_arch }}

    steps:
      - name: Get current date
        run: echo "current_date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Set suffix
        run: echo "release_suffix=_${{ env.current_date }}" >> $GITHUB_ENV

      - name: Set version
        run: echo "version=$(echo ${{ github.ref }} | rev | cut -d'/' -f1 | rev)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v1

      - name: Create build dir
        run: mkdir -p /tmp/buildd-results

      - name: Pull container
        run: docker pull quay.io/${{ matrix.namespace }}/${{ matrix.template }}:${{ matrix.dist }}-${{ matrix.arch }}

      - name: Start Container
        run: echo CONTAINER_HASH=$(docker run --detach --privileged -v /tmp/buildd-results:/buildd -v /dev:/dev -v /sys/fs/cgroup:/sys/fs/cgroup -v ${PWD}:/buildd/sources --security-opt seccomp:unconfined quay.io/${{ matrix.namespace }}/${{ matrix.template }}:${{ matrix.dist }}-${{ matrix.arch }} /sbin/init) >> $GITHUB_ENV

      - name: Build rootfs
        run: docker exec $CONTAINER_HASH /bin/sh -c 'cd /buildd/sources; debos -t architecture:${{ matrix.debos_arch }} -t suffix:${{ env.release_suffix }} -t version:${{ env.version }} device.yml'

      - name: Upload Rootfs image
        id: upload-rootfs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./droidian-rootfs-api30gsi-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip
          asset_name: droidian-rootfs-api30gsi-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip
          asset_content_type: application/gzip

      - name: "Check devtools file existence"
        id: check_devtools
        uses: andstor/file-existence-action@v1
        with:
          files: "droidian-devtools-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip"

      - name: Upload devtools sideload
        if: steps.check_devtools.outputs.files_exists == 'true'
        id: upload-sideload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./droidian-devtools-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip
          asset_name: droidian-devtools-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip
          asset_content_type: application/gzip

      - name: "Check adaptation file existence"
        id: check_adaptation_sony_bahamut
        uses: andstor/file-existence-action@v1
        with:
          files: "droidian-adaptation-sony-bahamut-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip"

      - name: Upload adaptation-sony-bahamut sideload
        if: steps.check_adaptation_sony_bahamut.outputs.files_exists == 'true'
        id: upload-sideload-bahamut
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./droidian-adaptation-sony-bahamut-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip
          asset_name: droidian-adaptation-sony-bahamut-${{ matrix.debos_arch }}${{ env.release_suffix }}.zip
          asset_content_type: application/gzip
